#!/bin/bash
#
# This script checks if a MySQL server should take part in a pool, based on its role and its lag
#
export MYSQL_PWD=monitor

.  /opt/mysql-haproxy-xinetd/scripts/xinetd-helper

# manual override:
if [ -f /etc/xinetd-mysql/mysql-force-error-ro-pool-hint ] ; then
  http_503 "Forced hard out of pool. $(cat /etc/xinetd-mysql/mysql-force-error-ro-pool-hint)"
fi
if [ -f /etc/xinetd-mysql/mysql-force-into-ro-pool-hint ] ; then
  http_200 "Forced into pool. $(cat /etc/xinetd-mysql/mysql-force-into-ro-pool-hint)"
fi
if [ -f /etc/xinetd-mysql/mysql-force-outside-ro-pool-hint ] ; then
  http_404 "Forced out of pool. $(cat /etc/xinetd-mysql/mysql-force-outside-ro-pool-hint)"
fi

# Begin with should-or-should-not even consider to be in pool checks:
if [ -f /etc/xinetd-mysql/mysql-master-hint ] ; then
  http_404 "Master: disabled"
fi

if [ -f /etc/xinetd-mysql/mysql-delayed-hint ] ; then
  http_404 "Delayed server: disabled"
fi


# Proceed to lag specific checks
absolute_lag=$(/usr/bin/mysql -umonitor -e "SHOW SLAVE STATUS\G"| grep "Seconds_Behind_Master" | awk '{ print $2 }')
exit_code=$?

if [ "$exit_code" != "0" ] ; then
  http_503 "MySQL error"
fi

if [ "$exit_code" = "0" ] ; then
  http_200 "Lag OK"
fi
